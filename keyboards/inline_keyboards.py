from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder


def main_history_inline_kb() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.add(
        InlineKeyboardButton(
            text="üóìÔ∏è–ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π", callback_data="history_of_transactions"
        )
    )
    kb.add(
        InlineKeyboardButton(text="üìä–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç—Ä–∞—Ç", callback_data="user_statistic")
    )
    return kb.as_markup()


def change_date() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.add(InlineKeyboardButton(text="üóìÔ∏è–î—Ä—É–≥–∞—è –¥–∞—Ç–∞", callback_data="change_date"))
    kb.add(InlineKeyboardButton(text="‚¨ÖÔ∏è–ù–∞–∑–∞–¥", callback_data="back_to_main_history"))
    kb.adjust(1)
    return kb.as_markup()


def transaction_history() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.add(InlineKeyboardButton(text="üóìÔ∏è–î—Ä—É–≥–∞—è –¥–∞—Ç–∞", callback_data="change_date"))
    # kb.add(InlineKeyboardButton(
    #     text="‚û°Ô∏è–î—Ä—É–≥–∏–µ –Ω–µ–¥–∞–≤–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏",
    #     callback_data="change_transaction")
    # )
    kb.add(InlineKeyboardButton(text="‚¨ÖÔ∏è–ù–∞–∑–∞–¥", callback_data="back_to_main_history"))
    kb.adjust(1)
    return kb.as_markup()


def delete_history_kb() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.add(InlineKeyboardButton(text="üíØ–£–¥–∞–ª—è–µ–º", callback_data="delete_transaction"))
    return kb.as_markup()


def first_user_transaction_kb() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.add(
        InlineKeyboardButton(
            text="–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏",
            callback_data="use_default_category",
        )
    )
    kb.add(
        InlineKeyboardButton(text="–°–≤–æ–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏", callback_data="use_custom_category")
    )
    kb.adjust(1)
    return kb.as_markup()


def new_transaction() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.add(
        InlineKeyboardButton(text="üßÆ–ù–æ–≤–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è", callback_data="new_transaction")
    )
    kb.adjust(1)
    return kb.as_markup()


def transaction_main_kb(
    group_name: str, not_today: bool = False
) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    if group_name == "Expense":
        kb.add(InlineKeyboardButton(text="üí∞–ù–µ—Ç, —ç—Ç–æ –¥–æ—Ö–æ–¥üí∞", callback_data="income"))
    else:
        kb.add(InlineKeyboardButton(text="üìà–ù–µ—Ç, —ç—Ç–æ —Ä–∞—Å—Ö–æ–¥üìà", callback_data="expense"))

    kb.add(
        InlineKeyboardButton(
            text="üìÜ–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –¥–∞—Ç—É", callback_data="change_transaction_date"
        )
    )
    if not_today:
        kb.add(
            InlineKeyboardButton(
                text="‚è±Ô∏è–°–µ–≥–æ–¥–Ω—è", callback_data="change_for_today_date"
            )
        )
    kb.adjust(1, 2)
    return kb.as_markup()


def user_category_kb(category_list: list) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    for elem in category_list:
        kb.add(
            InlineKeyboardButton(
                text=elem, callback_data=f"transaction_category:{elem}"
            )
        )
    kb.adjust(2)
    kb.row(InlineKeyboardButton(text="‚¨ÖÔ∏è–ù–∞–∑–∞–¥", callback_data=f"back"))
    return kb.as_markup()


def transaction_descr_kb() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.add(
        InlineKeyboardButton(
            text="–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è", callback_data="transaction_without_descr"
        )
    )
    return kb.as_markup()


def transaction_save_kb() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.add(InlineKeyboardButton(text="‚úÖ–ó–∞–ø–∏—Å–∞—Ç—å", callback_data="add_category"))
    kb.add(InlineKeyboardButton(text="‚¨ÖÔ∏è–ù–∞–∑–∞–¥", callback_data="back"))
    kb.adjust(1)
    return kb.as_markup()


def save_category_kb() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.add(InlineKeyboardButton(text="‚úÖ–ó–∞–ø–∏—Å–∞—Ç—å", callback_data="add_transaction"))
    kb.add(InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å", callback_data="change_transaction"))
    kb.adjust(1)
    return kb.as_markup(resize_keyboard=True)


def change_transaction_details_kb() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.add(InlineKeyboardButton(text="üóìÔ∏è–î–∞—Ç—É", callback_data="change_transaction_date"))
    kb.add(InlineKeyboardButton(text="üí∞–°—É–º–º—É", callback_data="change_transaction_summ"))
    kb.add(
        InlineKeyboardButton(
            text="üóÇÔ∏è–ö–∞—Ç–µ–≥–æ—Ä–∏—é", callback_data="change_transaction_category"
        )
    )
    kb.add(
        InlineKeyboardButton(
            text="üñäÔ∏è–û–ø–∏—Å–∞–Ω–∏–µ", callback_data="change_transaction_descr"
        )
    )
    kb.add(InlineKeyboardButton(text="‚¨ÖÔ∏è–ù–∞–∑–∞–¥", callback_data="back"))
    kb.adjust(2)
    return kb.as_markup()


def exist_category_kb() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.add(
        InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é", callback_data="add_new_category")
    )
    kb.add(
        InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é", callback_data="delete_category")
    )
    kb.add(
        InlineKeyboardButton(
            text="–ò–∑–º–µ–Ω–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é", callback_data="change_category_name"
        )
    )
    kb.adjust(1, 2)
    return kb.as_markup()


def group_category_kb() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.add(InlineKeyboardButton(text="–î–æ—Ö–æ–¥", callback_data="income"))
    kb.add(InlineKeyboardButton(text="–†–∞—Å—Ö–æ–¥", callback_data="expense"))
    kb.add(InlineKeyboardButton(text="–í –Ω–∞—Å—Ç—Ä–æ–π–∫–∏üõ†Ô∏è", callback_data="ready"))
    kb.adjust(2, 1)
    return kb.as_markup()
